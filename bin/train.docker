#!/bin/bash

if [ "$1" == "stop" ]; then
    echo "关闭Retina训练容器..."
    docker ps|grep retina_train|awk '{print $1}'|xargs docker stop
    exit
fi

if [ "$2" == "" ]; then
    echo "格式：bin/train.docker <GPU:0|1> <debug|face>"
    exit
fi

PWD=`pwd`
GPU_OPT="--runtime=nvidia"
DAEMON=""
PROXY=""
PROXY="--env http_proxy=http://172.17.0.1:8123 --env https_proxy=http://172.17.0.1:8123 --env HTTP_PROXY=http://172.17.0.1:8123 --env HTTPS_PROXY=http://172.17.0.1:8123"
DEVICE=$1

if [ "$2" == "term" ]; then
    echo "进入终端 ..."
    CMD="/bin/bash"
elif [ "$2" == "test" ]; then
    echo "服务器上的Test模式"
    shift 2
    CMD="python test.py $@"
elif [ "$2" == "debug" ]; then
    echo "服务器上的Debug模式"
    CMD="bin/train.sh $2"
else
    echo "启动训练，模式：$2"
    CMD="bin/train.sh $2"
    DAEMON="-d"
fi

FULL_CMD="
    docker run --rm
    --shm-size 4G
    -it $DAEMON $GPU_OPT
    -e NVIDIA_VISIBLE_DEVICES=$DEVICE $PROXY
    -v $PWD:/root/retina
    -v /app/data/face/widerface/:/root/retina/data
    -v /root/.cache:/root/.cache
    --name retina_train
    --network host
    --workdir /root/retina
    pytorch.img:v1
    $CMD
"

echo "启动命令："
echo "==================================="
echo "$FULL_CMD"
echo "==================================="
eval $FULL_CMD